
dnl Process this file with autoconf to produce a configure script.
AC_INIT(ez-ipupdate.c)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(ez-ipupdate,2.2.2)


dnl Checks for programs.

AC_ARG_PROGRAM
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL

AC_TYPE_SIGNAL

dnl Checks for libraries.

AC_CHECK_FUNC(gethostbyname)
if test $ac_cv_func_gethostbyname = no; then
    AC_CHECK_LIB(nsl, gethostbyname)
fi
AC_CHECK_FUNC(connect)
if test $ac_cv_func_connect = no; then
    AC_CHECK_LIB(socket, connect)
fi

AC_CHECK_FUNCS( socket \
		strdup \
		getopt_long \
                gethostbyaddr \
	        getservbyname \
	        inet_addr \
		inet_ntoa \
		snprintf \
		strerror \
		herror )

dnl Checks for header files.
AC_CHECK_HEADERS( arpa/inet.h \
		  sys/types.h \
		  sys/time.h \
		  fcntl.h \
		  signal.h \
		  syslog.h \
		  pwd.h \
		  grp.h \
		  getopt.h )
AC_CHECK_HEADERS( unistd.h \
		  netinet/in.h \
		  netdb.h \
		  sys/socket.h
                  ,,
                  AC_MSG_ERROR(could not locate neccessary system header files) )

AC_CHECK_LIB(c, sys_errlist, AC_DEFINE(HAVE_SYS_ERRLIST))

dnl you need at least to have getopt, but getopt_long will be used if it
dnl is present
AC_CHECK_FUNCS(getopt)
if test "$ac_cv_func_getopt" != yes; then
  AC_MSG_ERROR(getopt is needed for this program to work)
fi

AC_CHECK_FUNC(getpass, AC_DEFINE(HAVE_GETPASS),
    [EXTRASRC="$EXTRASRC \$(srcdir)/getpass.c"]
    [EXTRAOBJ="$EXTRAOBJ \$(srcdir)/getpass.o"] )

dnl Get system canonical name
AC_CANONICAL_HOST
AC_DEFINE_UNQUOTED(OS, "${host}")

dnl check weather we want debugging support
dnl the default is to NOT use debugging support
AC_MSG_CHECKING(whether user wants debugging support)
AC_ARG_ENABLE(debug,
	      [  --enable-debug          include support for debugging],
	      [ AC_DEFINE(DEBUG)
		AC_MSG_RESULT(yes) ],
	      [ AC_MSG_RESULT(no) ]   )


AC_SUBST(EXTRASRC)
AC_SUBST(EXTRAOBJ)

AC_OUTPUT(Makefile)

